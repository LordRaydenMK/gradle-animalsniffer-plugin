plugins {
    id 'groovy'
    id 'jacoco'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'net.researchgate.release' version '2.8.0'
    id 'ru.vyarus.quality' version '4.0.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'ru.vyarus.java-lib' version '1.1.2'
    id 'ru.vyarus.github-info' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id "pl.droidsonroids.jacoco.testkit" version "1.0.3"
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '5.2.1'
}

repositories { jcenter() }
dependencies {
    compile("org.codehaus.mojo:animal-sniffer:1.16")

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
}

group = 'ru.vyarus'
description = 'Gradle AnimalSniffer plugin'

github {
    user 'xvik'
    license 'MIT'
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = 'xvik'
        name = project.name
        desc = project.description
        labels = ['gradle', 'animalsniffer']
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

pluginBundle {
    description = 'Gradle AnimalSniffer plugin for Java projects'
    tags = ['animalsniffer']

    plugins {
        animalsnifferPlugin {
            id = 'ru.vyarus.animalsniffer'
            displayName = project.description
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload, publishPlugins]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed', 'standard_error'
        exceptionFormat 'full'
    }
    maxHeapSize = '2g'
    doLast {
        sleep(1000)
    }
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true
generateJacocoTestKitProperties.destinationFile = file('build/jacoco/test.exec').absolutePath.replace("\\", '/')